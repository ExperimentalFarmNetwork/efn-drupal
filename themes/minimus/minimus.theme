<?php

use Drupal\image\Entity\ImageStyle;
use Drupal\Core\Form\FormState;
use Drupal\Core\Url;
use Symfony\Component\HttpFoundation\RedirectResponse;

function minimus_preprocess_node(&$variables) {

// a little help from http://drupal.stackexchange.com/a/205375/61845
  $variables['author'] = \Drupal::entityTypeManager()->getViewBuilder('user')->view($variables['node']->getOwner(), 'nodeview');

  $profile_type = 'main';
  $user = $variables['node']->getOwner();
  $style = '80x80';

  $profile = \Drupal::entityManager()->getStorage('profile')
    ->loadByUser($user, $profile_type);

  $variables['authpic'] = getAuthorpic($user, $profile_type, $style);
}

function minimus_preprocess_comment(&$variables) {
  $profile_type = 'main';
  $user = $variables['comment']->getOwner();
  $style='80x80';
  $variables['authpic'] = getAuthorpic($user, $profile_type, $style);
}


function getAuthorpic($user, $profile_type, $style){
  $profile = \Drupal::entityManager()->getStorage('profile')
    ->loadByUser($user, $profile_type);
  if (!empty($profile) && !empty($profile->field_user_image->getValue())) {
    $file_uri = $profile->field_user_image->entity->getFileUri();
    $pic  = \Drupal\image\Entity\ImageStyle::load($style)->buildUri($file_uri);
    return $pic;
  }
  else {
    $file_uri = "public://default_images/efn_user.png";
    $pic  = \Drupal\image\Entity\ImageStyle::load($style)->buildUri($file_uri);
    return $pic;
  }
  ksm($user, $profile_type, $style);
  return NULL;
}

function minimus_preprocess_group(&$variables, $hook){
  ksm($variables);

  if ((\Drupal::routeMatch()->getRouteName() === 'entity.group.canonical' || \Drupal::routeMatch()->getRouteName() === 'entity.group.edit_form')) {
  $variables['#attached']['library'][] = 'minimus/group-view';
  }

}
function minimus_preprocess_page__user(&$variables, $hook){
  $route = \Drupal::routeMatch()->getRouteName();
  if ($route == 'entity.user.canonical') {
    $variables['show_contact'] = true;
  }
}

// Project header image for page--group.html.twig
function minimus_preprocess_page__group(&$variables, $hook){
  $route = \Drupal::routeMatch()->getRouteName();
  if ($route === 'entity.group.canonical' || $route === 'entity.group.edit_form' || $route === 'view.group_members.page_1' || $route === 'entity.group_content.collection' || $route === 'view.group_nodes.page_1'){
  $group_id = \Drupal::routeMatch()->getRawParameter('group');
  $group_storage = \Drupal::entityManager()->getStorage('group');
  $project_image = $group_storage->load($group_id)->get('field_project_image')->entity->uri->value;
  $url = ImageStyle::load('project_banner')->buildUrl($project_image);
  $variables['project_image'] = $url;
  }
}

function minimus_preprocess(&$variables, $hook){
  $url = Drupal\Core\Url::fromRoute('<current>')->getInternalPath();
  $variables['route']=$url;

  // add title styling to view and edit of group pages
  if (\Drupal::routeMatch()->getRouteName() === 'entity.group.edit_form'){
  $variables['#attached']['library'][] = 'minimus/group-view';
  }
}

// change the title of the "Company" field to "Organization"
function minimus_form_alter(&$form, FormState $form_state, $form_id) {
  if ($form_id =='profile_researcher_add_form') {
    $form['field_address']['widget'][0]['address']['#after_build'][] = 'minimus_address_label';
  }

  // Some tweaks for views_send for project vounteer emails
  if ($form_id == 'views_form_group_members_page_2_11') {
    $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    $profile = \Drupal::entityManager()->getStorage('profile')
      ->loadByUser($user, 'main');
    $full_name = $profile->get('field_full_name')->getValue();
    $mail = $user->get('mail')->getValue()[0]['value'];
    $form['from']['views_send_from_name']['#default_value'] = $full_name;
    $form['from']['views_send_from_mail']['#default_value'] = $mail;
    $form['from']['views_send_from_name']['#access'] = FALSE;
    $form['from']['#attributes']['class'][] = 'hidden';

    $form['to']['views_send_to_name']['#default_value'] = 'name_pos_0';
    $form['to']['views_send_to_mail']['#default_value'] = 'mail_pos_2';
    $form['to']['#attributes']['class'][] = 'hidden';

    $form['additional']['#attributes']['class'][] = 'hidden';

    $form['views_send_remember']['#attributes']['class'][] = 'hidden';
    $form['views_send_remember']['#access'] = FALSE;

    $form['views_send_direct']['#attributes']['class'][] = 'hidden';
    $form['views_send_direct']['#access'] = FALSE;

    $form['views_send_tokens']['#attributes']['class'][] = 'hidden';
  }
}

function minimus_address_label($element, $form_state) {
  $element['organization']['#title'] = t('Organization');
  return $element;
}

function minimus_preprocess_page_title(&$variables) {
  if( strpos( $variables['route'], '/members/mail' ) !== false) {
    $variables['title']['#markup'] = 'Email Project members';
  }
  if($variables['route'] ==  'group/add/project') {
    $variables['#attached']['library'][] = 'minimus/group-view';
  }
}

/**
 * Implements hook_preprocess_node().
 */
function minimus_preprocess_node__project_update(&$variables) {
  $variables['date'] = \Drupal::service('date.formatter')->format($variables['node']->getCreatedTime(), 'long');
  $entity_id = $variables['node']->id();

  if ($variables['view_mode'] = 'full' && \Drupal::routeMatch()->getRouteName() === 'entity.node.canonical') {
    $query = \Drupal::database()
    ->select('group_content_field_data', 'gc')
    ->fields('gc', ['gid'])
    ->condition('gc.entity_id', $entity_id)
    ->condition('gc.type', 'group_content_type_43c14e35a52cb')
    ->execute();
    $results = $query->fetchAll();
    $gid = $results[0]->gid;
    if (isset($gid)){
      $url = URL::fromUserInput('/project/' . $gid . '#updates');
      $redir = new RedirectResponse($url->toString());
      $redir->send();
    } else {
      ksm($results);
    }
  }
}

// Hide title in profile block
/**
 * Implements hook_preprocess_views_view().
 */
function minimus_preprocess_views_view(&$variables) {
  if ($variables['id'] == 'profiles'){
    unset($variables['title']);
  }
}

function minimus_menu__account(&$variables) {
  // ksm($variables);
  $variables['items']['user.logout']['attributes'] = [
  'class' => ['use-ajax'],
  'data-dialog-type' => 'modal'];
}
