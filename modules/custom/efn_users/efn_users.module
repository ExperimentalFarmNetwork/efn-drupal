<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\user\Entity\User;
use Drupal\profile\Entity\Profile;
use Drupal\Core\Url;
use Drupal\group\Entity\GroupContent;
/**
 * Implements hook_profile_insert().
 */
function efn_users_profile_insert(EntityInterface $profile) {
	// Add appropriate roles when user completes profile. Names should match.
	if (in_array($profile->bundle(), ['volunteer', 'researcher'])) {
		$user = $profile->getOwner();
		$user->addRole($profile->bundle());
		$user->save();
	}
}

/**
 * Implements hook_form_alter().
 */
function efn_users_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id){
	// No damn set default buttons on forms
	if (strpos($form_id, "rofile_")){
		$form['actions']['set_default']['#access']=FALSE;
		// kint($form_id);
	}

	if ($form_id == 'group_content_project-group_membership_group-join_form') {
	    $form['actions']['submit']['#submit'][] = 'send_to_project';
	  }
}
/**
 * Contact form submit handler
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function send_to_project(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
	$entity = $form_state->getFormObject()->getEntity();
	$group= $entity-> getGroup();

	// Group will have new content so invalidate group tags. But this won't work no matter how we call the Cache class. why? seems to work without clearing caches anyhow ??
	// $tags = $group->getCacheTagsToInvalidate();
	// \Drupal\Core\Cache::invalidateTags($tags);

	// Now redirect to the url of the group.
	$route_params = ['group' => $group->id()];
	$form_state->setRedirect('entity.group.canonical', $route_params);

	drupal_set_message(t('Thanks for joining the Project. You now can post updates and comment!'));
}