--- drush/default_content.drush.inc
+++ drush/default_content.drush.inc
@@ -109,11 +121,67 @@ function drush_default_content_export_references($entity_type_id, $entity_id = N
  *
  * @param string $module_name
  *   The module name to export.
+ *
+ * @return null|false
+ *   FALSE if the passed module or profile doesn't exist or it's uninstalled.
  */
 function drush_default_content_export_module($module_name) {
+  if (!_drush_default_content_valid_module($module_name)) {
+    return FALSE;
+  }
   /** @var \Drupal\default_content\DefaultContentManagerInterface $manager */
   $manager = \Drupal::service('default_content.manager');
   $serialized_by_type = $manager->exportModuleContent($module_name);
   $module_folder = \Drupal::moduleHandler()->getModule($module_name)->getPath() . '/content';
   $manager->writeDefaultContent($serialized_by_type, $module_folder);
 }
+
+/**
+ * Imports or updates content provided in enabled modules and default profile.
+ *
+ * @param string|null $module
+ *   (optional) An installed module or the default profile. If passed, the
+ *   import will limit to this module or profile. Defaults to NULL.
+ *
+ * @return null|false
+ *   FALSE if the passed module or profile doesn't exist or it's uninstalled.
+ */
+function drush_default_content_import($module = NULL) {
+  if (!_drush_default_content_valid_module($module)) {
+    return FALSE;
+  }
+  $update_existing = drush_get_option('update', FALSE);
+  $modules = !empty($module) ? [$module] : array_keys(\Drupal::config('core.extension')->get('module'));
+  $default_content_manager = \Drupal::service('default_content.manager');
+  $total = 0;
+  $translation = \Drupal::translation();
+  foreach ($modules as $module) {
+    if ($count = count($default_content_manager->importContent($module, $update_existing))) {
+      drush_log($translation->formatPlural($count, '@module: 1 entry', '@module: @count entries', ['@module' => $module]), LogLevel::OK);
+      $total += $count;
+    }
+  }
+  if ($total) {
+    drush_log($translation->formatPlural($total, 'Total: 1 entry', 'Total: @count entries'), LogLevel::OK);
+  }
+  else {
+    drush_log(dt('No content has been imported.'), LogLevel::WARNING);
+  }
+}
+
+/**
+ * Validates that a module or a profile exists and is installed.
+ *
+ * @param string|null $module
+ *   An installed module or the default profile. If not passed, the validation
+ *   passes.
+ *
+ * @return bool
+ *   TRUE if the passed module or profile name validates.
+ */
+function _drush_default_content_valid_module($module) {
+  if (!empty($module) && !\Drupal::moduleHandler()->moduleExists($module)) {
+    return drush_set_error('INVALID_MODULE', dt("Module or profile '@module' doesn't exist or is uninstalled.", ['@module' => $module]));
+  }
+  return TRUE;
+}
